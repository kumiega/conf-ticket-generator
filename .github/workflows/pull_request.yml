name: Pull Request

on:
    pull_request:
        branches:
            - master

jobs:
  deploy:
    runs-on: ubuntu-latest 
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Configure node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
        
      - name: Lint code
        run: pnpm run lint

      - name: Build app
        run: pnpm run build

      - name: Run E2E tests
        run: pnpm run test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build for Vercel
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy to Vercel
        run: |
          DEPLPY_OUTPUT="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          DEPLOY_URL="$(echo "$DEPLPY_OUTPUT" | grep http | tail -n 1)"
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Comment with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { DEPLOY_URL } = process.env;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üîç Preview URL: ${DEPLOY_URL}`
            })